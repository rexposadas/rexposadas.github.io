[{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This is page is dedicated to the Bacolod Rotary club coding class.\nRequirements for the class Laptop - We\u0026rsquo;ll be coding so you need this. Pen \u0026amp; Paper - You\u0026rsquo;ll need this to take notes. Resources Visual Studio Code - This is the editor we\u0026rsquo;ll be using. It\u0026rsquo;s free and open source. This is OPTIONAL. If you prefer a different editor, you can use that. Github - This is where we\u0026rsquo;ll be hosting our code. It\u0026rsquo;s free. You\u0026rsquo;ll need to create an account. Once you create an account, send me a message with the URL of your profile. List of homeworks. Day 2 ( Dec. 8, 2023) Review of day 1. Same homework from day 1. Do these exercises Day 1 agenda (Nov. 1, 2022) Introduction to software development. Setting up your laptop (if you brought one). Intro to JavaScript Homework Do this before our next class.\nCreate an account here: https://www.freecodecamp.org/ . That\u0026rsquo;s the website that will have the exercises for the class. At the bottom of that page, you should see a section that says \u0026ldquo;JavaScript Algorithms and Data Structures\u0026rdquo;. Click that section. You should be taken to a list of exercises. Start from the top and work on the exercises until you get stuck. Then message me in Facebook to let me know which section you were able to do last. You should be able to do at least 3 of the exercises because of what I covered in the class.\nHomework (Extra credit) Do this only after you are done with the mandatory exercises.\nCreate an account in https://github.com/ Send me your github name so I can follow you. ","date":"November 28, 2022","hero":"/images/generated/circles_gradient.png","permalink":"https://rexposadas.github.io/posts/coding_101_bcd/","summary":"This is page is dedicated to the Bacolod Rotary club coding class.\nRequirements for the class Laptop - We\u0026rsquo;ll be coding so you need this. Pen \u0026amp; Paper - You\u0026rsquo;ll need this to take notes. Resources Visual Studio Code - This is the editor we\u0026rsquo;ll be using. It\u0026rsquo;s free and open source. This is OPTIONAL. If you prefer a different editor, you can use that. Github - This is where we\u0026rsquo;ll be hosting our code.","tags":null,"title":"Coding 101 - Bacolod Rotary Club"},{"categories":null,"contents":"What I learned my first week looking into cyber security:\nWhat I learned as a web developer applies. It\u0026rsquo;s more fun to learn than regular web development. It broadens my skill set. TLDR It was an exciting week dipping my toes in cyber security. Links and info I came across during my discovery:\ncat To read plain text files. wget To download files. file To look at the file type. exiftools Read and write meta data. CTFTime Competitive events. picoCTF Learn and compete against others. Kali Linux Linux for hackers. Intro to API hacking A lot of what I learned as a web developer applies I was going through PicoCTF and solving the beginner challenges. The experience was to going through the usual way of how I would debug an issue in my application.\nThe goal of Capture the Flag games (CTFs) is to find a string with a specific format. This string is a flag. For PicoCTF is looks something like this picoCTF{some-striing}\nI tried the beginner challenges, designed for high school students. I found myself using tools that I use on a daily basis, which was encouraging.\nCLI tools I used which I already knew:\ncat To read plain text files.\nwget To download files.\nfile To look at the file type.\nexiftools was the only one I needed which I had to discover. And man, I\u0026rsquo;ve been living under a rock! This tool is awesome. It can read metadata from images, videos, audio files, and more. I used it to find the flag in the first challenge.\nAlong with the tools above, I was running python scripts. I was using the same tools I use on a daily basis. I was just using them in a different way.\nI got excited piping a string through base64. I don\u0026rsquo;t know why, but it was great find a flag that way.\nI know, I know, these are beginner CTFs, but it gives me an idea of how CTFs work.\nIt\u0026rsquo;s more fun than learning web development Yeah, you read that right. I\u0026rsquo;ve been a web developer for 15+ years and I never had more fun learning a topic like cyber security (well, generated art comes very close).\nThe community has gamified the learning process. CTFTime and picoCTF made cyber security competitive and fun. There are even CTF teams! which I\u0026rsquo;m excited about. Unfortunately, it looks like it takes a year or two to be part of a team.\nIt broadens my skill set My world has been in application development, some devops and database architecture. Cyber security has me learning about netcat, file meta data and hacking tools. It\u0026rsquo;s broadening my skill set because I need to learn these things to get to the flag.\nI feel like I\u0026rsquo;m becoming a better developer. My many years of backend software programming helps a bit. But, not much. I feel like noob in this space.\nI even started using Kali Linux. Nothing against Linux, I use them all the time to host web services. But I don\u0026rsquo;t use them for development. I\u0026rsquo;m using Kali Linux to learn about hacking tools. I\u0026rsquo;m excited that I have a new environment to play with.\nFirst impressions I\u0026rsquo;m excited to get into it. I heard/read that it takes 5+ years to get good at this. Sounds just like backend web programming. So, here I am, week one. 4 years and 51 weeks to go to get a sense of mastery. What would be clutch is if I can join a team.\n","date":"November 1, 2022","hero":"/images/generated/circle-plaid.png","permalink":"https://rexposadas.github.io/posts/cyber_security_week/","summary":"What I learned my first week looking into cyber security:\nWhat I learned as a web developer applies. It\u0026rsquo;s more fun to learn than regular web development. It broadens my skill set. TLDR It was an exciting week dipping my toes in cyber security. Links and info I came across during my discovery:\ncat To read plain text files. wget To download files. file To look at the file type. exiftools Read and write meta data.","tags":null,"title":"First week learning Cyber Security"},{"categories":null,"contents":"Achievements Became an Industry Mentor for Oregon Status University (2022)\nWhat: I mentor students for the Software Innovation Lab at OSU\u0026rsquo;s College of Engineering.\nImpact: Mentoring students to be better software engineers.\nMy Role: Industry Mentor.\nContributed to business acquisition (2018)\nWhat: I built a cloud product for a small business\nImpact: The business was acquired by a larger company partly due to the product I built.\nMy Role: Technical lead, architect and developer.\nTechnical co-founder (2014)\nWhat: I co-founded an ag-tech startup which provided business intelligence to farmers.\nImpact: Startup was a finalist in SXSW. SXSW is a tech festival held in Austin, TX.\nGenerated cash flow (2014)\nWhat: I implemented the intellectual property for a tech startup\nImpact: This made it possible to start selling and generate cash flow.\nMy Role: Technical co-founder\nIncreased revenue by 10x (2012)\nWhat: I rewrote a microtransaction module for a game company.\nImpact: This provided the ability to support thousands of concurrent users thereby increasing revenue.\nMy Role: Senior Engineer\nInfinite lives in video game (Age 14)\nWhat: At the age of 14, I taught myself how to code by modifying a video game\u0026rsquo;s local data storage.\nImpact: I gave myself infinite lives and completed the game.\nProjects Gen2D Description: A CLI to generate 2D art. Origin: I wanted to do something different, but still program in Go. Status: In early stages of development. Satisfaction: Building this has been a lot of fun. And It\u0026rsquo;s different from the other projects I\u0026rsquo;ve worked on. ","date":"October 10, 2022","hero":"/images/generated/square-17.png","permalink":"https://rexposadas.github.io/posts/achievements/","summary":"Achievements Became an Industry Mentor for Oregon Status University (2022)\nWhat: I mentor students for the Software Innovation Lab at OSU\u0026rsquo;s College of Engineering.\nImpact: Mentoring students to be better software engineers.\nMy Role: Industry Mentor.\nContributed to business acquisition (2018)\nWhat: I built a cloud product for a small business\nImpact: The business was acquired by a larger company partly due to the product I built.\nMy Role: Technical lead, architect and developer.","tags":null,"title":"Achievements"},{"categories":null,"contents":"I wanted to start something, something that I can work on without the pressure of doing it well. For all you software developers out there, you know what I mean. You want to go back to a time when you developed software because you were curious and not because a customer is asking for a bug fix.\nEnter generated art. I am not an artist. I don\u0026rsquo;t have an artistic bone in my body. But I can code. Art is something that has been missing in my life. I feel left out not being able to create art, or at least enjoy what I have created. So, when I discovered how easy it was to create art with code, I got excited. Oh, and I didn\u0026rsquo;t want anything difficult to learn. You know, cuz I\u0026rsquo;m getting old.\nI decided to work wigh Go since that\u0026rsquo;s the language I am most comfortable with.\nGoogling golang generated art took me to this repository.\nYou want to see how easy it is to generate art? Look at these lines:\ngo get github.com/jdxyw/generativeart\nfunc main() { rand.Seed(time.Now().Unix()) c := generativeart.NewCanva(500, 500) c.SetBackground(common.White) c.FillBackground() c.SetColorSchema([]color.RGBA{ {0xCF, 0x2B, 0x34, 0xFF}, {0xF0, 0x8F, 0x46, 0xFF}, {0xF0, 0xC1, 0x29, 0xFF}, {0x19, 0x6E, 0x94, 0xFF}, {0x35, 0x3A, 0x57, 0xFF}, }) c.Draw(arts.NewRandomShape(150)) c.ToPNG(\u0026#34;randomshape.png\u0026#34;) } Yup, that\u0026rsquo;s it. And I generated something like this:\nIt took, maybe, 10 minutes to get something like that. So, now I have to try out all the sample shapes. The repository is really good at hiding a lot of the implementation and get you to quickly generate art. This is all new to me.\n","date":"August 8, 2022","hero":"/images/generated/night-moons-dark.png","permalink":"https://rexposadas.github.io/posts/art_first_look/","summary":"I wanted to start something, something that I can work on without the pressure of doing it well. For all you software developers out there, you know what I mean. You want to go back to a time when you developed software because you were curious and not because a customer is asking for a bug fix.\nEnter generated art. I am not an artist. I don\u0026rsquo;t have an artistic bone in my body.","tags":null,"title":"A first look at generated art (golang)"},{"categories":null,"contents":"Starting with generated art (using Golang). What is it? It\u0026rsquo;s digital art created by code.\nWhat I like about it You can produce a ton of work in a short amount of time. I don\u0026rsquo;t have a degree in art and never really been an artist, but generated art if easy for someone who can code to pick up. It\u0026rsquo;s basic coding with basic math involved.\nGetting started If you\u0026rsquo;re like me, getting up and running is what I need first. It speeds up my progress if I can iterate on things.\nQuick start I created a CLI which can produce generated art pretty easily. Here\u0026rsquo;s the repo\nhttps://github.com/rexposadas/art\nIf you have Go installed, you can run it with the following.\ngo install github.com/rexposadas/art art samples That should generate a .png file where you ran the command. If you\u0026rsquo;re in a mac you can open that file in a browser with open samples-circle.png\n","date":"June 8, 2022","hero":"/images/generated/square-1.png","permalink":"https://rexposadas.github.io/posts/generated/generated_code/","summary":"Starting with generated art (using Golang). What is it? It\u0026rsquo;s digital art created by code.\nWhat I like about it You can produce a ton of work in a short amount of time. I don\u0026rsquo;t have a degree in art and never really been an artist, but generated art if easy for someone who can code to pick up. It\u0026rsquo;s basic coding with basic math involved.\nGetting started If you\u0026rsquo;re like me, getting up and running is what I need first.","tags":null,"title":"Generated Art"},{"categories":null,"contents":"Yup. I admit it. I failed. I was given an assignment, although the timeline was unrealistic, I still felt that I could finish it given enough energy, focus and long night. But I failed. I didn\u0026rsquo;t meet the deadline. Is it OK for a programmer, much less a consultant, to admit he failed. Maybe.\nLessons learned. I attribute my failure to my lack of communication and the bravado I displayed thinking that \u0026ldquo;I got this!\u0026rdquo;.\nI got this! No I didn\u0026rsquo;t. I had to learn Linux namespaces, Docker, NSQ, ElasticSearch, Kibana, LogStash, a custom Go app, and secure tunneling with Zebedee all in 6 weeks.\nWhat was I thinking? I did notify my managers that it was a hefty task for 6 weeks, but we really had no choice. It was a fixed-bid project.\nWhat I did was what I thought was best at the time. I will put in as many hours and I can in a week, kill myself and get this done. Heads down and ready to go\u0026hellip; until I crashed and burned. By the fourth week I was a walking zombie. I had no taste for the work. My motivation was gone and I was no where complete. Lesson learned? Maybe the first is, don\u0026rsquo;t kill yourself.\nAsk, ask, ask. There was so much space to cover I was stupid for me to not bug anyone about the code. The code was given handed to me to take over. I was excited about the idea because, even now, I think it\u0026rsquo;s a really cool project. I wanted to own it and finish it.\nBut the folks who wrote the Go app did not have the time to help me. What ended up happening was that I was swimming in really bad written Go code. It violated the DRY principle in so many ways. But that\u0026rsquo;s no excuse. I came in as a Go dev and it was my duty to fix all that. Right? Right! So, no blame on the previous developers.\nI blame myself. Even if they were busy. I jeopardized the project by not asking. I spun my wheels a few times and that ate up too much time and brain cells. I should\u0026rsquo;ve raised the flag early and often. I was brave and stupid. I\u0026rsquo;d rather be a coward and lucky to be honest.\nSomething good had to come out of all this, right? Of course. I was found another tool I love, Docker. I don\u0026rsquo;t think I could live without anymore. I was also able to contribute to the NSQ project with this documentation.\n","date":"June 8, 2022","hero":"/images/generated/steampunk-binarytree.png","permalink":"https://rexposadas.github.io/posts/i_got_this/","summary":"Yup. I admit it. I failed. I was given an assignment, although the timeline was unrealistic, I still felt that I could finish it given enough energy, focus and long night. But I failed. I didn\u0026rsquo;t meet the deadline. Is it OK for a programmer, much less a consultant, to admit he failed. Maybe.\nLessons learned. I attribute my failure to my lack of communication and the bravado I displayed thinking that \u0026ldquo;I got this!","tags":null,"title":"I got this! No, I don't"},{"categories":null,"contents":"Beaver to NSQ Configuring Beaver as a producer for nsq.\nFor the examples below, 172.17.42.1 was used as the docker host IP. Change the example to the docker host ip in your environment.\nLinks Video on setup. Quick Elk. A quick way to get an ELK stack running in your environment. Beaver configuration Set the output of Beaver to be an HTTP POST to nsqd.\n[beaver] logstash_version: 1\rtransport: http\rhttp_url: http://172.17.42.1:4151/put?topic=test\r[in.log]\rSetting up nsqd to listent to that port is documented on a different readme in this directory.\nChecking out setup. Write to our log file\necho \u0026quot;my log message\u0026quot; \u0026gt;\u0026gt; in.log\rBeaver will read this list from the file and then POST that message to nsqd. The message is sent as the body of the POST.\nChecking our config On one terminal check nsqlookupd for the topic \u0026ldquo;test\u0026rdquo;.\nwatch -n 0.5 \u0026quot;curl -s curl http://172.17.42.1:4161/topics\u0026quot;\rOn another terminal check nsqd for increments in messages with the topic \u0026ldquo;test\u0026rdquo;\nwatch -n 0.5 \u0026quot;curl -s http://172.17.42.1:4151/stats\u0026quot;\r","date":"June 8, 2021","hero":"/images/generated/night-moons.png","permalink":"https://rexposadas.github.io/posts/beaver-to-nsq/","summary":"Beaver to NSQ Configuring Beaver as a producer for nsq.\nFor the examples below, 172.17.42.1 was used as the docker host IP. Change the example to the docker host ip in your environment.\nLinks Video on setup. Quick Elk. A quick way to get an ELK stack running in your environment. Beaver configuration Set the output of Beaver to be an HTTP POST to nsqd.\n[beaver] logstash_version: 1\rtransport: http\rhttp_url: http://172.","tags":null,"title":"Beaver to NSQ"},{"categories":null,"contents":"Leave it (the logging) to Beaver This post shows you how to get started with beaver.\nFollow the installation instructions in the Github page.\nThe Setup Run the following in order to determine if you have beaver up.\nbeaver -h That should give you the manual.\nWhat we are going to do is simple. Have beaver listen to a file and then output to stdout. It\u0026rsquo;s a simple simulation of beaver listening to a log file and processing it\u0026rsquo;s updates.\nCreate a file that will serve as your log file. This is what beaver will listen to.\ntouch in.log Create a config file to tell beaver what version of logentries we would like.\nvim beaver.conf In the conf file enter:\n[beaver] logstash_version: 1 In one terminal start beaver, setting the config file and the file we would like to listen to. The command below should start a\nbeaver -c beaver.conf -f in.log In another terminal add content to in.log\necho \u0026quot;hello\u0026quot; \u0026gt;\u0026gt; in.log You should see something like this in the terminal you ran beaver in.\n{ \u0026quot;tags\u0026quot;: [], \u0026quot;@version\u0026quot;: 1, \u0026quot;@timestamp\u0026quot;: \u0026quot;2014-06-19T15:22:38.907Z\u0026quot;, \u0026quot;host\u0026quot;: \u0026quot;provisioner\u0026quot;, \u0026quot;file\u0026quot;: \u0026quot;/home/rex/workspace/in.log\u0026quot;, \u0026quot;message\u0026quot;: \u0026quot;hello\u0026quot;, \u0026quot;type\u0026quot;: \u0026quot;file\u0026quot; } Done! Beaver is now working for you.\nIssues Beaver depends on the python request module. Here is the issue and the solution.\nNSQ NSQ will serve as our broker. The broker serves a queue. It holds the messages in case (1) log consumers (in our case ELK) goes down (2) log consumers cannot process the logs fast enough. Ideally, nsq will be empty most of the time.\nInstallation nsq is easy enough to install.\nThe only different in our setup is that instead of nsq outputing to a file, we will output to http. The http will point to elastic search.\nConnecting Beaver to NSQ Beaver has can transport logs via http. Create a beaver config file (beaver.conf).\n[beaver] logstash_version: 1 transport: http http_url: http://127.0.0.1:4151/put?topic=test [in.log] This config file instructs beaver to POST it\u0026rsquo;s output to http at the specified URL. Change the host and port accordinly to point to your nsq instance.\nRestart beaver passing the config file.\nbeaver -c beaver.conf Now add to the log you are listening in.\necho \u0026quot;nsq attached\u0026quot; \u0026gt;\u0026gt; in.log Take a look at your nsq admin page. Just as in the nsq installation page, the default URL is http://127.0.0.1:4171/. You will see that the number of messages increased by 1. This means that a log entry made it to nsq. So the path of the log was:\nin.log -\u0026gt; beaver -\u0026gt; nsq You now have beaver and nsq connected!\nThe ELK stack The ELK stack will store and process our logs.\nElasticSearch Elastic search accepts HTTP requests as data input.\n","date":"June 8, 2021","hero":"/images/circle.png","permalink":"https://rexposadas.github.io/posts/beaver/","summary":"Leave it (the logging) to Beaver This post shows you how to get started with beaver.\nFollow the installation instructions in the Github page.\nThe Setup Run the following in order to determine if you have beaver up.\nbeaver -h That should give you the manual.\nWhat we are going to do is simple. Have beaver listen to a file and then output to stdout. It\u0026rsquo;s a simple simulation of beaver listening to a log file and processing it\u0026rsquo;s updates.","tags":null,"title":"Intro to Python's Beaver"},{"categories":null,"contents":"The goal is to print a binary tree in such a way that each level of the tree is printed in a new line. Also, each level of the tree should be printed from left to right.\nWhy is this cool? Because it uses channels to print the different levels of the tree.\nReference Here is the entire code Let\u0026rsquo;s write some code Our tree definition:\ntype Node struct { Value int Left *Node Right *Node } A tree is made up of one or more nodes, hence the Node struct.\nThe print function will print the tree taking into account the different levels of the tree.\n// Print prints the entire tree from this node.\tfunc (n *Node) Print() { if n == nil { return } // nodes in this channel are printed rightaway currentLevel := make(chan *Node, 1000) // notes in this channel will be printed after // a new line is generated. nextLevel := make(chan *Node, 1000) // Let's ready the current node for printing currentLevel \u0026lt;- n // root of the tree for len(currentLevel) \u0026gt; 0 { n := \u0026lt;-currentLevel fmt.Print(n.Value) if n.Left != nil { nextLevel \u0026lt;- n.Left } if n.Right != nil { nextLevel \u0026lt;- n.Right } if len(currentLevel) == 0 { fmt.Println(\u0026quot;\u0026quot;) swap(currentLevel, nextLevel) } } } What gives us the ability to determine when the next level of the tree has been reached? It\u0026rsquo;s the two channels currentLevel and nextLevel. The currentLevel channel represents what to print now. The nextLevel channel represents node(s) which should be printed after we have inserted a new line.\nLet\u0026rsquo;s print stuff Build the tree structure in the example then print it.\nfunc main() { // top node, considered the first level root := \u0026amp;Node{ Value: 1, } // level 2 n2 := \u0026amp;Node{Value: 2} n3 := \u0026amp;Node{Value: 3} root.Left = n2 root.Right = n3 // level 3 n4 := \u0026amp;Node{Value: 4} n5 := \u0026amp;Node{Value: 5} n2.Left = n4 n2.Right = n5 n6 := \u0026amp;Node{Value: 6} n3.Right = n6 fmt.Println(\u0026quot;Printing root node:\u0026quot;) root.Print() fmt.Println(\u0026quot;Printing node n2:\u0026quot;) n2.Print() fmt.Println(\u0026quot;Printing node n3:\u0026quot;) n3.Print() } The output looks like this:\nPrinting root node: 1 23 456 Printing node n2: 2 45 Printing node n3: 3 6 Note that each level of the tree is represented on it\u0026rsquo;s separate row. Each level is printed from left to right according to the sample tree.\n","date":"June 8, 2021","hero":"/images/generated/circles-dots.png","permalink":"https://rexposadas.github.io/posts/binarytree/","summary":"The goal is to print a binary tree in such a way that each level of the tree is printed in a new line. Also, each level of the tree should be printed from left to right.\nWhy is this cool? Because it uses channels to print the different levels of the tree.\nReference Here is the entire code Let\u0026rsquo;s write some code Our tree definition:\ntype Node struct { Value int Left *Node Right *Node } A tree is made up of one or more nodes, hence the Node struct.","tags":null,"title":"Working with Binary Trees"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://rexposadas.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"}]